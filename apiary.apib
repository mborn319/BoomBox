FORMAT: 1A

# BoomBox
Use a raspberry pi or any computer as a media server for audio files.

# Data Structures

## Song Track (object)
+ id: (number,required)
+ albumid (number)
+ name: (string,required)
+ filename (string,required)

## Song Album (object)
+ id: (number,required)
+ artistid (number,required)
+ name: (string)

## Song Artist (object)
+ id: (number,required)
+ name: (string)

# Group Tracks
Manage song tracks

## Song track collection [/track]

### List one or all songs [GET /track[/{id}]]
+ Parameters 
  + search (number,optional) - keyword or phrase to search for
  + limit (number,optional) - maximum number of items to retrieve
    + default: 25
  + page (number,optional) - retrieve nth page of {limit} items
    + default: 1
+ Response 200 (application/json)
  + Attributes (array[Song Track])
### Insert song [POST /track/{id}]
+ Response 201
+ Attributes (Song Track)
### Update song [PUT /track/{id}]
+ Response 204
### Delete song [DELETE /track/{id}]
+ Response 204

# Group Albums
Manage song albums.

## Song album collection [/album]

### List one or all albums [GET /album[/{id}]]
+ Parameters 
  + search (number,optional) - keyword or phrase to search for
  + limit (number,optional) - maximum number of items to retrieve
    + default: 25
  + page (number,optional) - retrieve nth page of {limit} items
    + default: 1
+ Response 200 (application/json)
  + Attributes (array[Song Album])
### Insert album [POST /album/{id}]
+ Response 201
+ Attributes (Song Album)
### Update album [PUT /album/{id}]
+ Response 204
### Delete album [DELETE /album/{id}]
+ Response 204

# Group Artists
Manage song artists.

## Song artist collection [/artist]

### List one or all artists [GET /artist[/{id}]]
+ Parameters 
  + search (number,optional) - keyword or phrase to search for
  + limit (number,optional) - maximum number of items to retrieve
    + default: 25
  + page (number,optional) - retrieve nth page of {limit} items
    + default: 1
+ Response 200 (application/json)
  + Attributes (array[Song Artist])
### Insert artist [POST /album/{id}]
+ Response 201
+ Attributes (Song Artist)
### Update artist [PUT /album/{id}]
+ Response 204
### Delete artist [DELETE /album/{id}]
+ Response 204

# Group Stream
Manage the audio stream. Includes play, pause, and choosing resources to play, such as a track or album or list of songs by artist.

## Stream audio [/stream]

### Stream song [GET /stream/track/{id}]
Play a given song, indicated by the id in the url.
+ Attributes
  + repeat (boolean) - if true, infinitely loops the song track
    + default: false

### Stream album [GET /stream/album/{id}]
Play all songs from a given album, indicated by the id in the url.
+ Attributes
  + shuffle (boolean) - if true, randomizes play order of tracks by artist
    + default: false
  + repeat (boolean) - if true, infinitely loops the song tracks
    + default: false

### Stream artist [GET /stream/artist/{id}]
Play all songs by a given artist, indicated by the id in the url.
+ Attributes
  + shuffle (boolean) - if true, randomizes play order of tracks by artist
    + default: false
  + repeat (boolean) - if true, infinitely loops the song tracks
    + default: false

