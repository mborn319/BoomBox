FORMAT: 1A

# BoomBox
Use a raspberry pi or any computer as a media server for audio files.

# Data Structures

## Song Track (object)
+ id: (number,required)
+ albumid (number)
+ name: (string,required)
+ filename (string,required)

## Song Album (object)
+ id: (number,required)
+ artistid (number,required)
+ name: (string)

## Song Artist (object)
+ id: (number,required)
+ name: (string)

# Group Tracks
Manage song tracks

## Song track collection [/track]

### List one or all albums [GET]
+ Response 200 (application/json)
  + Attributes (array[Song Track])
### Insert new album [POST]
### Update album info [PUT]
### Delete song [DELETE]
+ Response 204

# Group Albums
Manage song albums

## Song album collection [/album]

### List one or all albums [GET]
### Insert new album [POST]
### Update album info [PUT]
### Delete song [DELETE]
+ Response 204

# Group Artists
Manage song artists.

## Song artist collection [/artist]

### List one or all albums [GET]
+ Response 200 
### Insert new album [POST]
### Update album info [PUT]
### Delete song [DELETE]
+ Response 204

## Stream audio [/stream]
Each endpoint (except for /stream/recent) accepts these parameters:

````javascript
{ 
  id: integer //REQUIRED
  random: boolean //optional
}
````
